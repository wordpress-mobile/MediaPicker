apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

version = "1.1.4"
group = "org.wordpress"
archivesBaseName = "mediapicker"

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v13:22.0.0'
    compile 'com.mcxiaoke.volley:library:1.0.10'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:2.4'
}

android {
    publishNonDefault true

    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 6
        versionName "1.1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
    'src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

signing {
    required {
        project.properties.containsKey("signing.keyId") && project.properties.containsKey("signing.secretKeyRingFile")
    }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.properties.ossrhUsername, password: project.properties.ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.properties.ossrhUsername, password: project.properties.ossrhPassword)
            }

            pom.project {
                name 'MediaPicker'
                packaging 'aar'
                description 'MediaPicker is an Android Fragment that enables users to select multiple media from a variety of sources.'
                url 'https://github.com/wordpress-mobile/MediaPicker'

                scm {
                    url 'https://github.com/wordpress-mobile/MediaPicker'
                    connection 'scm:git:https://github.com/wordpress-mobile/MediaPicker.git'
                    developerConnection 'scm:git:https://github.com/wordpress-mobile/MediaPicker.git'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'tonyr59h'
                        name 'Anthony Rankin'
                        email 'tonyr@automattic.com'
                    }
                }
            }
        }
    }
}
